name: Deploy Weather Dashboard to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Build with API key
      env:
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      run: |
        echo "🔍 Checking API key availability..."
        echo "API key length: ${#OPENWEATHER_API_KEY}"
        
        # Always create config.js - either with API key or demo mode
        if [ -n "$OPENWEATHER_API_KEY" ] && [ "$OPENWEATHER_API_KEY" != "" ] && [ "$OPENWEATHER_API_KEY" != "null" ]; then
          echo "🔑 API key found, creating config.js with real API key..."
          cat > config.js << 'EOF'
/**
 * Weather Dashboard Configuration (Auto-generated for GitHub Pages)
 * This file is generated during deployment with the API key from GitHub Secrets
 */

window.WEATHER_CONFIG = {
    API_KEY: '$OPENWEATHER_API_KEY',
    BASE_URL: 'https://api.openweathermap.org/data/2.5',
    UNITS: 'metric',
    LANG: 'en'
};

window.ENV = {
    OPENWEATHER_API_KEY: '$OPENWEATHER_API_KEY'
};

console.log('🔧 Configuration loaded with API key from GitHub Secrets!');
EOF
          echo "✅ config.js created with API key"
        else
          echo "⚠️  No API key found, creating config.js in demo mode..."
          cat > config.js << 'EOF'
/**
 * Weather Dashboard Configuration (Demo Mode)
 * No API key provided - using demo data
 */

window.WEATHER_CONFIG = {
    API_KEY: 'YOUR_API_KEY_HERE',
    BASE_URL: 'https://api.openweathermap.org/data/2.5',
    UNITS: 'metric',
    LANG: 'en'
};

console.log('🔧 Configuration loaded in demo mode');
EOF
          echo "✅ Demo mode config created"
        fi
        
        echo "📄 config.js contents:"
        cat config.js
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: .
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Show deployment URL
      run: |
        echo "🚀 Deployment completed!"
        echo "🌍 Your site will be available at:"
        echo "   ${{ steps.deployment.outputs.page_url }}"
        echo ""
        echo "⏰ Wait 2-5 minutes for the site to go live." 